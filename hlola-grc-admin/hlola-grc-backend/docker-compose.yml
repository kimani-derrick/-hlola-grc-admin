version: '3.8'

services:
  backend:
    build: .
    container_name: hlola-grc-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=hlola_grc_platform
      - DB_USER=hlola_user
      - DB_PASSWORD=hlola2025_prod
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_EXPIRES_IN=24h
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
      - STORAGE_PROVIDER=local
      - LOCAL_UPLOAD_PATH=./uploads
      - MAX_FILE_SIZE=52428800
      - ALLOWED_FILE_TYPES=pdf,doc,docx,xls,xlsx,jpg,jpeg,png,txt,csv,zip,rar
      - DISABLE_BACKGROUND_CRON=true
      - DISABLE_CRON=false
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - grc-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: hlola-grc-db-prod
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: hlola_grc_platform
      POSTGRES_USER: hlola_user
      POSTGRES_PASSWORD: hlola2025_prod
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./database/backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hlola_user -d hlola_grc_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - grc-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_prod_data:
    name: hlola_grc_postgres_prod_data
    driver: local

networks:
  grc-network:
    name: hlola_grc_network
    driver: bridge
